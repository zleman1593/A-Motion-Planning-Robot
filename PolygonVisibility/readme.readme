Zackery Leman & Ivy Xing
Computational Geometry
A C++ implementation to compute the shortest path of a simple polygon robot around polygon obstacles from a start to end point.

****** General Information ******


- Key press:
'm': Makes the robot move automatically from start to finish.
'd': Calculates and draws the shortest path.
'q': Quits the program.

- Color and shapes:
The polygon obstacles are drawn with RED LINES.
The vertices have HOLLOW RED CIRCLES drawn around them until the polygons are complete.
The start point is a FILLED GREEN CIRCLE.
The end point is a FILLED RED CIRCLE.
The robot is a BLUE SQUARE.
The shortest path is a BLUE PATH.


- Algorithm:
a.

********** Instructions **********

(1) Drawing the polygon obstacles and the start & end points:
- Click anywhere to draw a polygon vertex.
- When you draw the next vertex, an edge will be drawn to connect them (see a in Notes).
- To finish drawing the polygon, click back on the first vertex.
- After you finish the polygon, the next mouse click starts drawing another polygon in a similar fasion.
- Press 'e' to stop obstacle drawing mode once you have drawn the last polygon obstacle
- Click once for start
- Click  agan for end point
- Notes:
    a. If the mouse click leads to polygon self-intersection, no vertex/edge will be drawn.
    b. If the start or end point is outside the polygon, it won't be drawn.

(2) Click 'd' to draw path

(3) Click 'm' to moe the robot along the path








